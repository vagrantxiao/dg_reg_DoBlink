// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "knn_cluster4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<32> knn_cluster4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic knn_cluster4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic knn_cluster4::ap_const_logic_0 = sc_dt::Log_0;

knn_cluster4::knn_cluster4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    update_knn16_U0 = new update_knn16("update_knn16_U0");
    update_knn16_U0->ap_clk(ap_clk);
    update_knn16_U0->ap_rst(ap_rst);
    update_knn16_U0->ap_start(update_knn16_U0_ap_start);
    update_knn16_U0->start_full_n(start_for_update_knn17_U0_full_n);
    update_knn16_U0->ap_done(update_knn16_U0_ap_done);
    update_knn16_U0->ap_continue(update_knn16_U0_ap_continue);
    update_knn16_U0->ap_idle(update_knn16_U0_ap_idle);
    update_knn16_U0->ap_ready(update_knn16_U0_ap_ready);
    update_knn16_U0->start_out(update_knn16_U0_start_out);
    update_knn16_U0->start_write(update_knn16_U0_start_write);
    update_knn16_U0->Input_1_V_V(Input_1_V_V);
    update_knn16_U0->Input_1_V_V_ap_vld(Input_1_V_V_ap_vld);
    update_knn16_U0->Input_1_V_V_ap_ack(update_knn16_U0_Input_1_V_V_ap_ack);
    update_knn16_U0->Output_1_V_V_din(update_knn16_U0_Output_1_V_V_din);
    update_knn16_U0->Output_1_V_V_full_n(knn_out1_V_V_full_n);
    update_knn16_U0->Output_1_V_V_write(update_knn16_U0_Output_1_V_V_write);
    update_knn17_U0 = new update_knn17("update_knn17_U0");
    update_knn17_U0->ap_clk(ap_clk);
    update_knn17_U0->ap_rst(ap_rst);
    update_knn17_U0->ap_start(update_knn17_U0_ap_start);
    update_knn17_U0->start_full_n(start_for_update_knn18_U0_full_n);
    update_knn17_U0->ap_done(update_knn17_U0_ap_done);
    update_knn17_U0->ap_continue(update_knn17_U0_ap_continue);
    update_knn17_U0->ap_idle(update_knn17_U0_ap_idle);
    update_knn17_U0->ap_ready(update_knn17_U0_ap_ready);
    update_knn17_U0->start_out(update_knn17_U0_start_out);
    update_knn17_U0->start_write(update_knn17_U0_start_write);
    update_knn17_U0->Input_1_V_V_dout(knn_out1_V_V_dout);
    update_knn17_U0->Input_1_V_V_empty_n(knn_out1_V_V_empty_n);
    update_knn17_U0->Input_1_V_V_read(update_knn17_U0_Input_1_V_V_read);
    update_knn17_U0->Output_1_V_V_din(update_knn17_U0_Output_1_V_V_din);
    update_knn17_U0->Output_1_V_V_full_n(knn_out2_V_V_full_n);
    update_knn17_U0->Output_1_V_V_write(update_knn17_U0_Output_1_V_V_write);
    update_knn18_U0 = new update_knn18("update_knn18_U0");
    update_knn18_U0->ap_clk(ap_clk);
    update_knn18_U0->ap_rst(ap_rst);
    update_knn18_U0->ap_start(update_knn18_U0_ap_start);
    update_knn18_U0->start_full_n(start_for_update_knn19_U0_full_n);
    update_knn18_U0->ap_done(update_knn18_U0_ap_done);
    update_knn18_U0->ap_continue(update_knn18_U0_ap_continue);
    update_knn18_U0->ap_idle(update_knn18_U0_ap_idle);
    update_knn18_U0->ap_ready(update_knn18_U0_ap_ready);
    update_knn18_U0->start_out(update_knn18_U0_start_out);
    update_knn18_U0->start_write(update_knn18_U0_start_write);
    update_knn18_U0->Input_1_V_V_dout(knn_out2_V_V_dout);
    update_knn18_U0->Input_1_V_V_empty_n(knn_out2_V_V_empty_n);
    update_knn18_U0->Input_1_V_V_read(update_knn18_U0_Input_1_V_V_read);
    update_knn18_U0->Output_1_V_V_din(update_knn18_U0_Output_1_V_V_din);
    update_knn18_U0->Output_1_V_V_full_n(knn_out3_V_V_full_n);
    update_knn18_U0->Output_1_V_V_write(update_knn18_U0_Output_1_V_V_write);
    update_knn19_U0 = new update_knn19("update_knn19_U0");
    update_knn19_U0->ap_clk(ap_clk);
    update_knn19_U0->ap_rst(ap_rst);
    update_knn19_U0->ap_start(update_knn19_U0_ap_start);
    update_knn19_U0->start_full_n(start_for_update_knn20_U0_full_n);
    update_knn19_U0->ap_done(update_knn19_U0_ap_done);
    update_knn19_U0->ap_continue(update_knn19_U0_ap_continue);
    update_knn19_U0->ap_idle(update_knn19_U0_ap_idle);
    update_knn19_U0->ap_ready(update_knn19_U0_ap_ready);
    update_knn19_U0->start_out(update_knn19_U0_start_out);
    update_knn19_U0->start_write(update_knn19_U0_start_write);
    update_knn19_U0->Input_1_V_V_dout(knn_out3_V_V_dout);
    update_knn19_U0->Input_1_V_V_empty_n(knn_out3_V_V_empty_n);
    update_knn19_U0->Input_1_V_V_read(update_knn19_U0_Input_1_V_V_read);
    update_knn19_U0->Output_1_V_V_din(update_knn19_U0_Output_1_V_V_din);
    update_knn19_U0->Output_1_V_V_full_n(knn_out4_V_V_full_n);
    update_knn19_U0->Output_1_V_V_write(update_knn19_U0_Output_1_V_V_write);
    update_knn20_U0 = new update_knn20("update_knn20_U0");
    update_knn20_U0->ap_clk(ap_clk);
    update_knn20_U0->ap_rst(ap_rst);
    update_knn20_U0->ap_start(update_knn20_U0_ap_start);
    update_knn20_U0->ap_done(update_knn20_U0_ap_done);
    update_knn20_U0->ap_continue(update_knn20_U0_ap_continue);
    update_knn20_U0->ap_idle(update_knn20_U0_ap_idle);
    update_knn20_U0->ap_ready(update_knn20_U0_ap_ready);
    update_knn20_U0->Input_1_V_V_dout(knn_out4_V_V_dout);
    update_knn20_U0->Input_1_V_V_empty_n(knn_out4_V_V_empty_n);
    update_knn20_U0->Input_1_V_V_read(update_knn20_U0_Input_1_V_V_read);
    update_knn20_U0->Output_1_V_V(update_knn20_U0_Output_1_V_V);
    update_knn20_U0->Output_1_V_V_ap_vld(update_knn20_U0_Output_1_V_V_ap_vld);
    update_knn20_U0->Output_1_V_V_ap_ack(Output_1_V_V_ap_ack);
    knn_out1_V_V_U = new fifo_w32_d1024_A("knn_out1_V_V_U");
    knn_out1_V_V_U->clk(ap_clk);
    knn_out1_V_V_U->reset(ap_rst);
    knn_out1_V_V_U->if_read_ce(ap_var_for_const0);
    knn_out1_V_V_U->if_write_ce(ap_var_for_const0);
    knn_out1_V_V_U->if_din(update_knn16_U0_Output_1_V_V_din);
    knn_out1_V_V_U->if_full_n(knn_out1_V_V_full_n);
    knn_out1_V_V_U->if_write(update_knn16_U0_Output_1_V_V_write);
    knn_out1_V_V_U->if_dout(knn_out1_V_V_dout);
    knn_out1_V_V_U->if_empty_n(knn_out1_V_V_empty_n);
    knn_out1_V_V_U->if_read(update_knn17_U0_Input_1_V_V_read);
    knn_out2_V_V_U = new fifo_w32_d1024_A("knn_out2_V_V_U");
    knn_out2_V_V_U->clk(ap_clk);
    knn_out2_V_V_U->reset(ap_rst);
    knn_out2_V_V_U->if_read_ce(ap_var_for_const0);
    knn_out2_V_V_U->if_write_ce(ap_var_for_const0);
    knn_out2_V_V_U->if_din(update_knn17_U0_Output_1_V_V_din);
    knn_out2_V_V_U->if_full_n(knn_out2_V_V_full_n);
    knn_out2_V_V_U->if_write(update_knn17_U0_Output_1_V_V_write);
    knn_out2_V_V_U->if_dout(knn_out2_V_V_dout);
    knn_out2_V_V_U->if_empty_n(knn_out2_V_V_empty_n);
    knn_out2_V_V_U->if_read(update_knn18_U0_Input_1_V_V_read);
    knn_out3_V_V_U = new fifo_w32_d1024_A("knn_out3_V_V_U");
    knn_out3_V_V_U->clk(ap_clk);
    knn_out3_V_V_U->reset(ap_rst);
    knn_out3_V_V_U->if_read_ce(ap_var_for_const0);
    knn_out3_V_V_U->if_write_ce(ap_var_for_const0);
    knn_out3_V_V_U->if_din(update_knn18_U0_Output_1_V_V_din);
    knn_out3_V_V_U->if_full_n(knn_out3_V_V_full_n);
    knn_out3_V_V_U->if_write(update_knn18_U0_Output_1_V_V_write);
    knn_out3_V_V_U->if_dout(knn_out3_V_V_dout);
    knn_out3_V_V_U->if_empty_n(knn_out3_V_V_empty_n);
    knn_out3_V_V_U->if_read(update_knn19_U0_Input_1_V_V_read);
    knn_out4_V_V_U = new fifo_w32_d1024_A("knn_out4_V_V_U");
    knn_out4_V_V_U->clk(ap_clk);
    knn_out4_V_V_U->reset(ap_rst);
    knn_out4_V_V_U->if_read_ce(ap_var_for_const0);
    knn_out4_V_V_U->if_write_ce(ap_var_for_const0);
    knn_out4_V_V_U->if_din(update_knn19_U0_Output_1_V_V_din);
    knn_out4_V_V_U->if_full_n(knn_out4_V_V_full_n);
    knn_out4_V_V_U->if_write(update_knn19_U0_Output_1_V_V_write);
    knn_out4_V_V_U->if_dout(knn_out4_V_V_dout);
    knn_out4_V_V_U->if_empty_n(knn_out4_V_V_empty_n);
    knn_out4_V_V_U->if_read(update_knn20_U0_Input_1_V_V_read);
    start_for_update_lbW_U = new start_for_update_lbW("start_for_update_lbW_U");
    start_for_update_lbW_U->clk(ap_clk);
    start_for_update_lbW_U->reset(ap_rst);
    start_for_update_lbW_U->if_read_ce(ap_var_for_const0);
    start_for_update_lbW_U->if_write_ce(ap_var_for_const0);
    start_for_update_lbW_U->if_din(start_for_update_knn17_U0_din);
    start_for_update_lbW_U->if_full_n(start_for_update_knn17_U0_full_n);
    start_for_update_lbW_U->if_write(update_knn16_U0_start_write);
    start_for_update_lbW_U->if_dout(start_for_update_knn17_U0_dout);
    start_for_update_lbW_U->if_empty_n(start_for_update_knn17_U0_empty_n);
    start_for_update_lbW_U->if_read(update_knn17_U0_ap_ready);
    start_for_update_mb6_U = new start_for_update_mb6("start_for_update_mb6_U");
    start_for_update_mb6_U->clk(ap_clk);
    start_for_update_mb6_U->reset(ap_rst);
    start_for_update_mb6_U->if_read_ce(ap_var_for_const0);
    start_for_update_mb6_U->if_write_ce(ap_var_for_const0);
    start_for_update_mb6_U->if_din(start_for_update_knn18_U0_din);
    start_for_update_mb6_U->if_full_n(start_for_update_knn18_U0_full_n);
    start_for_update_mb6_U->if_write(update_knn17_U0_start_write);
    start_for_update_mb6_U->if_dout(start_for_update_knn18_U0_dout);
    start_for_update_mb6_U->if_empty_n(start_for_update_knn18_U0_empty_n);
    start_for_update_mb6_U->if_read(update_knn18_U0_ap_ready);
    start_for_update_ncg_U = new start_for_update_ncg("start_for_update_ncg_U");
    start_for_update_ncg_U->clk(ap_clk);
    start_for_update_ncg_U->reset(ap_rst);
    start_for_update_ncg_U->if_read_ce(ap_var_for_const0);
    start_for_update_ncg_U->if_write_ce(ap_var_for_const0);
    start_for_update_ncg_U->if_din(start_for_update_knn19_U0_din);
    start_for_update_ncg_U->if_full_n(start_for_update_knn19_U0_full_n);
    start_for_update_ncg_U->if_write(update_knn18_U0_start_write);
    start_for_update_ncg_U->if_dout(start_for_update_knn19_U0_dout);
    start_for_update_ncg_U->if_empty_n(start_for_update_knn19_U0_empty_n);
    start_for_update_ncg_U->if_read(update_knn19_U0_ap_ready);
    start_for_update_ocq_U = new start_for_update_ocq("start_for_update_ocq_U");
    start_for_update_ocq_U->clk(ap_clk);
    start_for_update_ocq_U->reset(ap_rst);
    start_for_update_ocq_U->if_read_ce(ap_var_for_const0);
    start_for_update_ocq_U->if_write_ce(ap_var_for_const0);
    start_for_update_ocq_U->if_din(start_for_update_knn20_U0_din);
    start_for_update_ocq_U->if_full_n(start_for_update_knn20_U0_full_n);
    start_for_update_ocq_U->if_write(update_knn19_U0_start_write);
    start_for_update_ocq_U->if_dout(start_for_update_knn20_U0_dout);
    start_for_update_ocq_U->if_empty_n(start_for_update_knn20_U0_empty_n);
    start_for_update_ocq_U->if_read(update_knn20_U0_ap_ready);

    SC_METHOD(thread_Input_1_V_V_ap_ack);
    sensitive << ( update_knn16_U0_Input_1_V_V_ap_ack );

    SC_METHOD(thread_Output_1_V_V);
    sensitive << ( update_knn20_U0_Output_1_V_V );

    SC_METHOD(thread_Output_1_V_V_ap_vld);
    sensitive << ( update_knn20_U0_Output_1_V_V_ap_vld );

    SC_METHOD(thread_ap_done);
    sensitive << ( update_knn20_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( update_knn16_U0_ap_idle );
    sensitive << ( update_knn17_U0_ap_idle );
    sensitive << ( update_knn18_U0_ap_idle );
    sensitive << ( update_knn19_U0_ap_idle );
    sensitive << ( update_knn20_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( update_knn16_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( update_knn20_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( update_knn16_U0_ap_ready );

    SC_METHOD(thread_start_for_update_knn17_U0_din);

    SC_METHOD(thread_start_for_update_knn18_U0_din);

    SC_METHOD(thread_start_for_update_knn19_U0_din);

    SC_METHOD(thread_start_for_update_knn20_U0_din);

    SC_METHOD(thread_update_knn16_U0_ap_continue);

    SC_METHOD(thread_update_knn16_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_update_knn17_U0_ap_continue);

    SC_METHOD(thread_update_knn17_U0_ap_start);
    sensitive << ( start_for_update_knn17_U0_empty_n );

    SC_METHOD(thread_update_knn18_U0_ap_continue);

    SC_METHOD(thread_update_knn18_U0_ap_start);
    sensitive << ( start_for_update_knn18_U0_empty_n );

    SC_METHOD(thread_update_knn19_U0_ap_continue);

    SC_METHOD(thread_update_knn19_U0_ap_start);
    sensitive << ( start_for_update_knn19_U0_empty_n );

    SC_METHOD(thread_update_knn20_U0_ap_continue);

    SC_METHOD(thread_update_knn20_U0_ap_start);
    sensitive << ( start_for_update_knn20_U0_empty_n );

    SC_METHOD(thread_update_knn20_U0_start_full_n);

    SC_METHOD(thread_update_knn20_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "knn_cluster4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, Input_1_V_V, "(port)Input_1_V_V");
    sc_trace(mVcdFile, Output_1_V_V, "(port)Output_1_V_V");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, Input_1_V_V_ap_vld, "(port)Input_1_V_V_ap_vld");
    sc_trace(mVcdFile, Input_1_V_V_ap_ack, "(port)Input_1_V_V_ap_ack");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, Output_1_V_V_ap_vld, "(port)Output_1_V_V_ap_vld");
    sc_trace(mVcdFile, Output_1_V_V_ap_ack, "(port)Output_1_V_V_ap_ack");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, update_knn16_U0_ap_start, "update_knn16_U0_ap_start");
    sc_trace(mVcdFile, update_knn16_U0_ap_done, "update_knn16_U0_ap_done");
    sc_trace(mVcdFile, update_knn16_U0_ap_continue, "update_knn16_U0_ap_continue");
    sc_trace(mVcdFile, update_knn16_U0_ap_idle, "update_knn16_U0_ap_idle");
    sc_trace(mVcdFile, update_knn16_U0_ap_ready, "update_knn16_U0_ap_ready");
    sc_trace(mVcdFile, update_knn16_U0_start_out, "update_knn16_U0_start_out");
    sc_trace(mVcdFile, update_knn16_U0_start_write, "update_knn16_U0_start_write");
    sc_trace(mVcdFile, update_knn16_U0_Input_1_V_V_ap_ack, "update_knn16_U0_Input_1_V_V_ap_ack");
    sc_trace(mVcdFile, update_knn16_U0_Output_1_V_V_din, "update_knn16_U0_Output_1_V_V_din");
    sc_trace(mVcdFile, update_knn16_U0_Output_1_V_V_write, "update_knn16_U0_Output_1_V_V_write");
    sc_trace(mVcdFile, update_knn17_U0_ap_start, "update_knn17_U0_ap_start");
    sc_trace(mVcdFile, update_knn17_U0_ap_done, "update_knn17_U0_ap_done");
    sc_trace(mVcdFile, update_knn17_U0_ap_continue, "update_knn17_U0_ap_continue");
    sc_trace(mVcdFile, update_knn17_U0_ap_idle, "update_knn17_U0_ap_idle");
    sc_trace(mVcdFile, update_knn17_U0_ap_ready, "update_knn17_U0_ap_ready");
    sc_trace(mVcdFile, update_knn17_U0_start_out, "update_knn17_U0_start_out");
    sc_trace(mVcdFile, update_knn17_U0_start_write, "update_knn17_U0_start_write");
    sc_trace(mVcdFile, update_knn17_U0_Input_1_V_V_read, "update_knn17_U0_Input_1_V_V_read");
    sc_trace(mVcdFile, update_knn17_U0_Output_1_V_V_din, "update_knn17_U0_Output_1_V_V_din");
    sc_trace(mVcdFile, update_knn17_U0_Output_1_V_V_write, "update_knn17_U0_Output_1_V_V_write");
    sc_trace(mVcdFile, update_knn18_U0_ap_start, "update_knn18_U0_ap_start");
    sc_trace(mVcdFile, update_knn18_U0_ap_done, "update_knn18_U0_ap_done");
    sc_trace(mVcdFile, update_knn18_U0_ap_continue, "update_knn18_U0_ap_continue");
    sc_trace(mVcdFile, update_knn18_U0_ap_idle, "update_knn18_U0_ap_idle");
    sc_trace(mVcdFile, update_knn18_U0_ap_ready, "update_knn18_U0_ap_ready");
    sc_trace(mVcdFile, update_knn18_U0_start_out, "update_knn18_U0_start_out");
    sc_trace(mVcdFile, update_knn18_U0_start_write, "update_knn18_U0_start_write");
    sc_trace(mVcdFile, update_knn18_U0_Input_1_V_V_read, "update_knn18_U0_Input_1_V_V_read");
    sc_trace(mVcdFile, update_knn18_U0_Output_1_V_V_din, "update_knn18_U0_Output_1_V_V_din");
    sc_trace(mVcdFile, update_knn18_U0_Output_1_V_V_write, "update_knn18_U0_Output_1_V_V_write");
    sc_trace(mVcdFile, update_knn19_U0_ap_start, "update_knn19_U0_ap_start");
    sc_trace(mVcdFile, update_knn19_U0_ap_done, "update_knn19_U0_ap_done");
    sc_trace(mVcdFile, update_knn19_U0_ap_continue, "update_knn19_U0_ap_continue");
    sc_trace(mVcdFile, update_knn19_U0_ap_idle, "update_knn19_U0_ap_idle");
    sc_trace(mVcdFile, update_knn19_U0_ap_ready, "update_knn19_U0_ap_ready");
    sc_trace(mVcdFile, update_knn19_U0_start_out, "update_knn19_U0_start_out");
    sc_trace(mVcdFile, update_knn19_U0_start_write, "update_knn19_U0_start_write");
    sc_trace(mVcdFile, update_knn19_U0_Input_1_V_V_read, "update_knn19_U0_Input_1_V_V_read");
    sc_trace(mVcdFile, update_knn19_U0_Output_1_V_V_din, "update_knn19_U0_Output_1_V_V_din");
    sc_trace(mVcdFile, update_knn19_U0_Output_1_V_V_write, "update_knn19_U0_Output_1_V_V_write");
    sc_trace(mVcdFile, update_knn20_U0_ap_start, "update_knn20_U0_ap_start");
    sc_trace(mVcdFile, update_knn20_U0_ap_done, "update_knn20_U0_ap_done");
    sc_trace(mVcdFile, update_knn20_U0_ap_continue, "update_knn20_U0_ap_continue");
    sc_trace(mVcdFile, update_knn20_U0_ap_idle, "update_knn20_U0_ap_idle");
    sc_trace(mVcdFile, update_knn20_U0_ap_ready, "update_knn20_U0_ap_ready");
    sc_trace(mVcdFile, update_knn20_U0_Input_1_V_V_read, "update_knn20_U0_Input_1_V_V_read");
    sc_trace(mVcdFile, update_knn20_U0_Output_1_V_V, "update_knn20_U0_Output_1_V_V");
    sc_trace(mVcdFile, update_knn20_U0_Output_1_V_V_ap_vld, "update_knn20_U0_Output_1_V_V_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, knn_out1_V_V_full_n, "knn_out1_V_V_full_n");
    sc_trace(mVcdFile, knn_out1_V_V_dout, "knn_out1_V_V_dout");
    sc_trace(mVcdFile, knn_out1_V_V_empty_n, "knn_out1_V_V_empty_n");
    sc_trace(mVcdFile, knn_out2_V_V_full_n, "knn_out2_V_V_full_n");
    sc_trace(mVcdFile, knn_out2_V_V_dout, "knn_out2_V_V_dout");
    sc_trace(mVcdFile, knn_out2_V_V_empty_n, "knn_out2_V_V_empty_n");
    sc_trace(mVcdFile, knn_out3_V_V_full_n, "knn_out3_V_V_full_n");
    sc_trace(mVcdFile, knn_out3_V_V_dout, "knn_out3_V_V_dout");
    sc_trace(mVcdFile, knn_out3_V_V_empty_n, "knn_out3_V_V_empty_n");
    sc_trace(mVcdFile, knn_out4_V_V_full_n, "knn_out4_V_V_full_n");
    sc_trace(mVcdFile, knn_out4_V_V_dout, "knn_out4_V_V_dout");
    sc_trace(mVcdFile, knn_out4_V_V_empty_n, "knn_out4_V_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_update_knn17_U0_din, "start_for_update_knn17_U0_din");
    sc_trace(mVcdFile, start_for_update_knn17_U0_full_n, "start_for_update_knn17_U0_full_n");
    sc_trace(mVcdFile, start_for_update_knn17_U0_dout, "start_for_update_knn17_U0_dout");
    sc_trace(mVcdFile, start_for_update_knn17_U0_empty_n, "start_for_update_knn17_U0_empty_n");
    sc_trace(mVcdFile, start_for_update_knn18_U0_din, "start_for_update_knn18_U0_din");
    sc_trace(mVcdFile, start_for_update_knn18_U0_full_n, "start_for_update_knn18_U0_full_n");
    sc_trace(mVcdFile, start_for_update_knn18_U0_dout, "start_for_update_knn18_U0_dout");
    sc_trace(mVcdFile, start_for_update_knn18_U0_empty_n, "start_for_update_knn18_U0_empty_n");
    sc_trace(mVcdFile, start_for_update_knn19_U0_din, "start_for_update_knn19_U0_din");
    sc_trace(mVcdFile, start_for_update_knn19_U0_full_n, "start_for_update_knn19_U0_full_n");
    sc_trace(mVcdFile, start_for_update_knn19_U0_dout, "start_for_update_knn19_U0_dout");
    sc_trace(mVcdFile, start_for_update_knn19_U0_empty_n, "start_for_update_knn19_U0_empty_n");
    sc_trace(mVcdFile, start_for_update_knn20_U0_din, "start_for_update_knn20_U0_din");
    sc_trace(mVcdFile, start_for_update_knn20_U0_full_n, "start_for_update_knn20_U0_full_n");
    sc_trace(mVcdFile, start_for_update_knn20_U0_dout, "start_for_update_knn20_U0_dout");
    sc_trace(mVcdFile, start_for_update_knn20_U0_empty_n, "start_for_update_knn20_U0_empty_n");
    sc_trace(mVcdFile, update_knn20_U0_start_full_n, "update_knn20_U0_start_full_n");
    sc_trace(mVcdFile, update_knn20_U0_start_write, "update_knn20_U0_start_write");
#endif

    }
    mHdltvinHandle.open("knn_cluster4.hdltvin.dat");
    mHdltvoutHandle.open("knn_cluster4.hdltvout.dat");
}

knn_cluster4::~knn_cluster4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete update_knn16_U0;
    delete update_knn17_U0;
    delete update_knn18_U0;
    delete update_knn19_U0;
    delete update_knn20_U0;
    delete knn_out1_V_V_U;
    delete knn_out2_V_V_U;
    delete knn_out3_V_V_U;
    delete knn_out4_V_V_U;
    delete start_for_update_lbW_U;
    delete start_for_update_mb6_U;
    delete start_for_update_ncg_U;
    delete start_for_update_ocq_U;
}

void knn_cluster4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void knn_cluster4::thread_Input_1_V_V_ap_ack() {
    Input_1_V_V_ap_ack = update_knn16_U0_Input_1_V_V_ap_ack.read();
}

void knn_cluster4::thread_Output_1_V_V() {
    Output_1_V_V = update_knn20_U0_Output_1_V_V.read();
}

void knn_cluster4::thread_Output_1_V_V_ap_vld() {
    Output_1_V_V_ap_vld = update_knn20_U0_Output_1_V_V_ap_vld.read();
}

void knn_cluster4::thread_ap_done() {
    ap_done = update_knn20_U0_ap_done.read();
}

void knn_cluster4::thread_ap_idle() {
    ap_idle = (update_knn16_U0_ap_idle.read() & update_knn17_U0_ap_idle.read() & update_knn18_U0_ap_idle.read() & update_knn19_U0_ap_idle.read() & update_knn20_U0_ap_idle.read());
}

void knn_cluster4::thread_ap_ready() {
    ap_ready = update_knn16_U0_ap_ready.read();
}

void knn_cluster4::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void knn_cluster4::thread_ap_sync_done() {
    ap_sync_done = update_knn20_U0_ap_done.read();
}

void knn_cluster4::thread_ap_sync_ready() {
    ap_sync_ready = update_knn16_U0_ap_ready.read();
}

void knn_cluster4::thread_start_for_update_knn17_U0_din() {
    start_for_update_knn17_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void knn_cluster4::thread_start_for_update_knn18_U0_din() {
    start_for_update_knn18_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void knn_cluster4::thread_start_for_update_knn19_U0_din() {
    start_for_update_knn19_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void knn_cluster4::thread_start_for_update_knn20_U0_din() {
    start_for_update_knn20_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void knn_cluster4::thread_update_knn16_U0_ap_continue() {
    update_knn16_U0_ap_continue = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn16_U0_ap_start() {
    update_knn16_U0_ap_start = ap_start.read();
}

void knn_cluster4::thread_update_knn17_U0_ap_continue() {
    update_knn17_U0_ap_continue = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn17_U0_ap_start() {
    update_knn17_U0_ap_start = start_for_update_knn17_U0_empty_n.read();
}

void knn_cluster4::thread_update_knn18_U0_ap_continue() {
    update_knn18_U0_ap_continue = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn18_U0_ap_start() {
    update_knn18_U0_ap_start = start_for_update_knn18_U0_empty_n.read();
}

void knn_cluster4::thread_update_knn19_U0_ap_continue() {
    update_knn19_U0_ap_continue = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn19_U0_ap_start() {
    update_knn19_U0_ap_start = start_for_update_knn19_U0_empty_n.read();
}

void knn_cluster4::thread_update_knn20_U0_ap_continue() {
    update_knn20_U0_ap_continue = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn20_U0_ap_start() {
    update_knn20_U0_ap_start = start_for_update_knn20_U0_empty_n.read();
}

void knn_cluster4::thread_update_knn20_U0_start_full_n() {
    update_knn20_U0_start_full_n = ap_const_logic_1;
}

void knn_cluster4::thread_update_knn20_U0_start_write() {
    update_knn20_U0_start_write = ap_const_logic_0;
}

void knn_cluster4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"Input_1_V_V\" :  \"" << Input_1_V_V.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Output_1_V_V\" :  \"" << Output_1_V_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Input_1_V_V_ap_vld\" :  \"" << Input_1_V_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Input_1_V_V_ap_ack\" :  \"" << Input_1_V_V_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Output_1_V_V_ap_vld\" :  \"" << Output_1_V_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Output_1_V_V_ap_ack\" :  \"" << Output_1_V_V_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

